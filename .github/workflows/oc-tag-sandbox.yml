name: OC POD Label SandBox

on:        
    workflow_dispatch:
        inputs:
            environment:
                description: 'Release Environment'     
                required: true
                default: 'dev'
jobs:
  oc-poc:
    runs-on: ubuntu-20.04
    steps:

      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        env:
          # These can be stored in secrets, if desired.
          OPENSHIFT_USER: deployer
          OPENSHIFT_NAMESPACE: ssuganth-dev

        with:
          # URL to your OpenShift cluster.
          # Refer to Step 2.
          openshift_server_url: https://api.sandbox.x8i5.p1.openshiftapps.com:6443

          # Authentication Token. Can use username and password instead.
          # Refer to Step 3.
          openshift_token:        eyJhbGciOiJSUzI1NiIsImtpZCI6IlZ0UXdOWnhYbFNlUE50VEE5RngyelpEbkUxd0hoeHNhVXNCV1pWeW40YWMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJzc3VnYW50aC1kZXYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVwbG95ZXItdG9rZW4tNmpjaGoiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVwbG95ZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI3MDI5YWRmNS0wOWQ5LTRiZTEtODFjYS1mZDAxYjUyNmE2ZTMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6c3N1Z2FudGgtZGV2OmRlcGxveWVyIn0.osvBFN_blfKd5iI1MP4ZEI0qfEUYL_mzJk1pS3XUAnaBnTag6sPKIyXccWk2RNg-GSSTu1h3H6qSzh2Q3AQUKgYBOli-xp53EZO56q_3s12e0yasEYDFrbZL4zF4Ec343sN3tTuyJrAKe3aLJhCyFexHudUkmvEERXNC3wBnhK3LPl9M5ODNsPvFfqcunngH8hjizH1-9aXZBWtCh_X4PAS-m2QChDoNi67D1xTl5C23z8Ryr-TZ7iR8f9N-ufewpqHpGYI_46vBh5EuDJDS09Qk6HG5rgLznol70brQtOT-n74fnhdcROpmCninSapKS3C-QTAcK61AswPGDlR-ag

          # Optional - this sets your Kubernetes context's current namespace after logging in.
          namespace: ssuganth-dev
      
      - name: Get Release Version
        run: |
          branch=${GITHUB_REF##*/}
          version=$(echo $branch | cut -d "/" -f2-)
          echo "releaseVersion=$version" >> $GITHUB_ENV
      
      - name: Print Release Version
        run: |
          echo "Release version is ${{ env.releaseVersion }}"
          echo "Release Environment: ${{ github.event.inputs.environment }}"
      
      - name: DC Update
        env:
          releaseVersion: ${{ env.releaseVersion }}
        run: |
          oc patch dc redis --patch '{"spec":{"template":{"metadata":{"labels":{"version":${releaseVersion}}}}}}'
         
